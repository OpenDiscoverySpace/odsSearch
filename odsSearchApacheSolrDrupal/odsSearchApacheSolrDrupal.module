<?php

function odsSearchApacheSolrDrupal_apachesolr_search_result_alter(stdClass $document, array &$extra, DrupalSolrQueryInterface $query) {
    // ApacheSolrDocument $document

    /* drupal_debug("Document : ".print_r($document,true));

    foreach($extra as $e) {
        drupal_debug("Extra: ".print_r($e,true));
    } */
    //drupal_debug("Query    : ".print_r($query,true));

    // that fails, types must be different
    //$document->ds_changed = $document->updated;
}


function odsSearchApacheSolrDrupal_apachesolr_query_alter(DrupalSolrQueryInterface $query) {
    global $user, $language;
    dd("---------- query3 ---------------");
    dd("Query    : ".print_r($query,true));
    foreach($query->getSolrsort() as $s)
        dd("Query sort: ".$s);
    $query->setSolrsort("Title","desc");
    foreach($query->getAvailableSorts() as $a) {
        dd(" available sort: ".implode(' ', $a));
    }

    // how to add a facet query?
    // $query->addFilter("age","18-U");
    // how to sort?
    $query->setAvailableSort("author", array("author asc"));
    $query->setSolrsort("author", "asc");
    //$query->setAvailableSort("age", array("age asc"));
    //$query->setSolrsort("age", "asc");
    // or add Param (ugly!)
    //$query->addParam("sort", "updated desc");

    /* foreach($query->getSolrsort() as $s)
        drupal_debug("Query sort: ".$s); */

    // returned fields
    $b= $query->getParams();
    $a = $b['fl'];
    $a[]="updated";
    $a[]="author";
    $a[]="source";
    $a[]="ageRange";
    $a[]="age"; // ??
    $a[]="copyright";

    //$query->setAvailableSort("age",array("title"=>"age", "default"=>"desc"));
    $query->addParam('odsUserLang', $user->language);
    $query->addParam('odsLang', $language->language);
    dd('odsLang'.$language->language);
    dd('odsUserLang'.$user->language);
    $query->addParam('fl', $a);


    dd("---------- /query3 --------------");
}

// function apachesolr_multilingual_get_language_filters_by_query

/** This hook to hook_apachesolr_index_document_build adds text-fields needed to be indexed.  */
function odsSearchApacheSolrDrupal_apachesolr_index_document_build(ApacheSolrDocument $document, $entity, $entity_type, $env_id) {
    try {
        $indexerLanguages= array('en','nl','fr','de','el','it','es','hr','bg','da','fi','et', 'lv', 'lt', 'pt','sr','ga');
        //dd("building entity type: ".$entity_type);
        //dd("From entity: ".print_r($entity, true));
        //dd("Identifier: ".(print_r($entity->field_lo_identifier['und'][0]['value'],true)));
        $document->addField("loid",  $entity->field_lo_identifier['und'][0]['value']);
        foreach($indexerLanguages as $lang){
            $document->addField("i18n_content_".$lang,  $entity->field_eo_description[$lang][0]['value']);
        }
        $document->addField("author",  $entity->field_author_fullname['und'][0]['value']);
        // $document->addField("source",  $entity->field_data_provider);
        $document->addField("copyright",  $entity->field_copyright['und'][0]['value']);
    $l = sizeof($entity->field_educational_typicalagerang['und']);
    for($i=0; $i<$l; $i++) {
        $ageRange = $entity->field_educational_typicalagerang['und'][$i]['value'];
        if($ageRange) {
            $document->addField("ageRange",  $ageRange);
            try {
                $ages=explode("-",$ageRange);
                if(strtolower($ages[0])=='u') $ages[0] = '0';
                if(strtolower($ages[1])=='u') $ages[1] = '25';
                if(strval($ages[0])>strval($ages[1])) {
                    $x = $ages[0]; $ages[0] = $ages[1]; $ages[1] = $x;
                }
                if(strval($ages[0])<0) $ages[0]='0';
                if(strval($ages[1])>25) $ages[1] = '25';
                $agesI = array(intval($ages[0]),intval($ages[1]));
                for($i=$agesI[0]; $i<$agesI[1]; $i++) {
                    $document->addField("age",  strval($i));
                    //dd("age: ".$i);
                }
            } catch(Exception $x) {
                dd("Warning: ".$x);
            }
        }
    }

    // teaser should only be made of the description
    $document->teaser = $entity->field_eo_description['und'][0]['value'];
    // in all languages
    foreach($indexerLanguages as $lang) {
        $document->addField("i18n_teaser_".$lang , $entity->field_eo_description[$lang][0]['value']);
    }

    } catch(Exception $x) {
        dd("Exception at indexing " .$x);
    }



    //dd("Into: ".implode(' ',get_object_vars($document)));
 }

function odsSearchApacheSolrDrupal_apachesolr_index_document_build_educational_object(ApacheSolrDocument $document, $entity, $env_id) {
    // is not called!
    dd("Please mail paul@cermat.org if you see me in the log. A wonder has happened.");
}

// FACET HOOKS

/**
 * Implements hook_facetapi_facet_info.
 * @param array $searcher_info
 * @return array
 **/
function odsSearchApacheSolrDrupal_facetapi_facet_info(array $searcher_info) {
    $facets = array();
    // Facets are usually associated with the type of content stored in the index.
    //dd("searchers: ".print_r($searcher_info, true));
    if (isset($searcher_info['types']['node'])) {
        $facets['author'] = array(
            'name' => 'author',
            'label' => t('Author'),
            'description' => t('The author that created the resource.'),
            'field' => 'author',
            'dependency plugins' => array('role'), // ???
            'default widget' => 'links',
            'allowed operators' => array(FACETAPI_OPERATOR_AND => TRUE, FACETAPI_OPERATOR_OR => TRUE),
            'facet missing allowed' => FALSE,
            'facet mincount allowed' => FALSE,
            //'map callback' => 'mymodulename_map_im_products_nid',
            'max callback' => FALSE,
            'default sorts' => array(
                array('active', SORT_DESC),
                array('count', SORT_DESC),
                array('display', SORT_ASC),
            ),
        );

        $facets['age'] = array(
            'name' => 'age',
            'label' => t('Age'),
            'description' => t('The typical age.'),
            'field' => 'age',
            'dependency plugins' => array('role'), // ???
            'default widget' => 'links',
            'allowed operators' => array(FACETAPI_OPERATOR_AND => TRUE, FACETAPI_OPERATOR_OR => TRUE),
            'facet missing allowed' => FALSE,
            'facet mincount allowed' => FALSE,
            //'map callback' => 'mymodulename_map_im_products_nid',
            'max callback' => FALSE,
            'default sorts' => array(
                array('active', SORT_DESC),
                array('count', SORT_DESC),
                array('display', SORT_ASC),
            ),
        );

    }
    return $facets;
}

// ============================== THEME HOOKS =======================================

/* function odsSearchApacheSolrDrupal_theme($existing, $type, $theme, $path) {
    return array(
        odsSearchApacheSolrDrupal_hookname
    )
} */


// ============================ THEME FUNCTIONS ============================================
function printIfThere($text) {
    if($text) {
        print($text);
        print(" â€¢ ");
    }
}




// css adjustments

drupal_add_css( drupal_get_path('module', 'odsSearchApacheSolrDrupal') . '/odsSearchApacheSolrDrupal.css');